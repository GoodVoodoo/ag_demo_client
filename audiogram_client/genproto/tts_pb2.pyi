"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import collections.abc
import google.protobuf.descriptor
import google.protobuf.internal.containers
import google.protobuf.internal.enum_type_wrapper
import google.protobuf.message
import sys
import typing
if sys.version_info >= (3, 10):
    import typing as typing_extensions
else:
    import typing_extensions
DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

class _AudioEncoding:
    ValueType = typing.NewType('ValueType', builtins.int)
    V: typing_extensions.TypeAlias = ValueType

class _AudioEncodingEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_AudioEncoding.ValueType], builtins.type):
    DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
    ENCODING_UNSPECIFIED: _AudioEncoding.ValueType
    LINEAR_PCM: _AudioEncoding.ValueType
    FLAC: _AudioEncoding.ValueType
    MULAW: _AudioEncoding.ValueType
    ALAW: _AudioEncoding.ValueType

class AudioEncoding(_AudioEncoding, metaclass=_AudioEncodingEnumTypeWrapper):
    ...
ENCODING_UNSPECIFIED: AudioEncoding.ValueType
LINEAR_PCM: AudioEncoding.ValueType
FLAC: AudioEncoding.ValueType
MULAW: AudioEncoding.ValueType
ALAW: AudioEncoding.ValueType
global___AudioEncoding = AudioEncoding

class _VoiceStyle:
    ValueType = typing.NewType('ValueType', builtins.int)
    V: typing_extensions.TypeAlias = ValueType

class _VoiceStyleEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[_VoiceStyle.ValueType], builtins.type):
    DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
    VOICE_STYLE_NEUTRAL: _VoiceStyle.ValueType
    'спокойное состояние'
    VOICE_STYLE_HAPPY: _VoiceStyle.ValueType
    'радость'
    VOICE_STYLE_ANGRY: _VoiceStyle.ValueType
    'злость'
    VOICE_STYLE_SAD: _VoiceStyle.ValueType
    'грусть'
    VOICE_STYLE_SURPRISED: _VoiceStyle.ValueType
    'удивление'

class VoiceStyle(_VoiceStyle, metaclass=_VoiceStyleEnumTypeWrapper):
    ...
VOICE_STYLE_NEUTRAL: VoiceStyle.ValueType
'спокойное состояние'
VOICE_STYLE_HAPPY: VoiceStyle.ValueType
'радость'
VOICE_STYLE_ANGRY: VoiceStyle.ValueType
'злость'
VOICE_STYLE_SAD: VoiceStyle.ValueType
'грусть'
VOICE_STYLE_SURPRISED: VoiceStyle.ValueType
'удивление'
global___VoiceStyle = VoiceStyle

@typing_extensions.final
class SynthesizeOptions(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    class _PostprocessingMode:
        ValueType = typing.NewType('ValueType', builtins.int)
        V: typing_extensions.TypeAlias = ValueType

    class _PostprocessingModeEnumTypeWrapper(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[SynthesizeOptions._PostprocessingMode.ValueType], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor
        POST_PROCESSING_DISABLE: SynthesizeOptions._PostprocessingMode.ValueType
        '\n        Постобработка выключена.\n        '
        POST_PROCESSING_PHONE_CHANNEL: SynthesizeOptions._PostprocessingMode.ValueType
        '\n        Рекомендуется использовать для телефонного канала.\n        Допускается использовать только с AudioOptions.sample_rate_hertz = 8000 Гц,\n        Наилучший результат дает в сочетании с SynthesizeOptions.model_sample_rate_hertz = 44100 Гц\n        '
        POST_PROCESSING_PRETTIFY: SynthesizeOptions._PostprocessingMode.ValueType
        '\n        Рекомендуется использовать для микрофонного канала\n        '

    class PostprocessingMode(_PostprocessingMode, metaclass=_PostprocessingModeEnumTypeWrapper):
        ...
    POST_PROCESSING_DISABLE: SynthesizeOptions.PostprocessingMode.ValueType
    '\n    Постобработка выключена.\n    '
    POST_PROCESSING_PHONE_CHANNEL: SynthesizeOptions.PostprocessingMode.ValueType
    '\n    Рекомендуется использовать для телефонного канала.\n    Допускается использовать только с AudioOptions.sample_rate_hertz = 8000 Гц,\n    Наилучший результат дает в сочетании с SynthesizeOptions.model_sample_rate_hertz = 44100 Гц\n    '
    POST_PROCESSING_PRETTIFY: SynthesizeOptions.PostprocessingMode.ValueType
    '\n    Рекомендуется использовать для микрофонного канала\n    '

    @typing_extensions.final
    class CustomSynthesizeOptionValue(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor
        INT32_VALUE_FIELD_NUMBER: builtins.int
        INT64_VALUE_FIELD_NUMBER: builtins.int
        NUMBER_VALUE_FIELD_NUMBER: builtins.int
        STRING_VALUE_FIELD_NUMBER: builtins.int
        BOOL_VALUE_FIELD_NUMBER: builtins.int
        int32_value: builtins.int
        'Represents a int32 value.'
        int64_value: builtins.int
        ' Represents a int64 value.'
        number_value: builtins.float
        ' Represents a double value.'
        string_value: builtins.str
        ' Represents a string value.'
        bool_value: builtins.bool
        ' Represents a boolean value.'

        def __init__(self, *, int32_value: builtins.int=..., int64_value: builtins.int=..., number_value: builtins.float=..., string_value: builtins.str=..., bool_value: builtins.bool=...) -> None:
            ...

        def HasField(self, field_name: typing_extensions.Literal['bool_value', b'bool_value', 'int32_value', b'int32_value', 'int64_value', b'int64_value', 'kind', b'kind', 'number_value', b'number_value', 'string_value', b'string_value']) -> builtins.bool:
            ...

        def ClearField(self, field_name: typing_extensions.Literal['bool_value', b'bool_value', 'int32_value', b'int32_value', 'int64_value', b'int64_value', 'kind', b'kind', 'number_value', b'number_value', 'string_value', b'string_value']) -> None:
            ...

        def WhichOneof(self, oneof_group: typing_extensions.Literal['kind', b'kind']) -> typing_extensions.Literal['int32_value', 'int64_value', 'number_value', 'string_value', 'bool_value'] | None:
            ...

    @typing_extensions.final
    class CustomOptionsEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor
        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: builtins.str

        @property
        def value(self) -> global___SynthesizeOptions.CustomSynthesizeOptionValue:
            ...

        def __init__(self, *, key: builtins.str=..., value: global___SynthesizeOptions.CustomSynthesizeOptionValue | None=...) -> None:
            ...

        def HasField(self, field_name: typing_extensions.Literal['value', b'value']) -> builtins.bool:
            ...

        def ClearField(self, field_name: typing_extensions.Literal['key', b'key', 'value', b'value']) -> None:
            ...
    MODEL_TYPE_FIELD_NUMBER: builtins.int
    MODEL_SAMPLE_RATE_HERTZ_FIELD_NUMBER: builtins.int
    VOICE_STYLE_FIELD_NUMBER: builtins.int
    POSTPROCESSING_MODE_FIELD_NUMBER: builtins.int
    CUSTOM_OPTIONS_FIELD_NUMBER: builtins.int
    model_type: builtins.str
    '\n    Тип модели.\n    Список доступных типов моделей:\n    - light: рекомендуется для потокового синтеза\n    - high_quality: рекомендуется для файлового синтеза\n    '
    model_sample_rate_hertz: builtins.int
    '\n    Частота дискредитации модели (в герцах).\n    Если поле не указано, то будет подобрана наиболее близкая модель к указанной частоте дискредитации аудио.\n    '
    voice_style: global___VoiceStyle.ValueType
    '\n    Стиль речи\n    Значение по умолчанию: VOICE_STYLE_NEUTRAL.\n    '
    postprocessing_mode: global___SynthesizeOptions.PostprocessingMode.ValueType
    'Постобработка'

    @property
    def custom_options(self) -> google.protobuf.internal.containers.MessageMap[builtins.str, global___SynthesizeOptions.CustomSynthesizeOptionValue]:
        """
        Дополнительный набор опций по настройке синтеза.
        В custom_options выносятся экспериментальные настройки, которые еще не прошли полную апробацию.
        Список доступных опций определен в документации Audiogram API соответствующего релиза.
        """

    def __init__(self, *, model_type: builtins.str=..., model_sample_rate_hertz: builtins.int=..., voice_style: global___VoiceStyle.ValueType=..., postprocessing_mode: global___SynthesizeOptions.PostprocessingMode.ValueType=..., custom_options: collections.abc.Mapping[builtins.str, global___SynthesizeOptions.CustomSynthesizeOptionValue] | None=...) -> None:
        ...

    def ClearField(self, field_name: typing_extensions.Literal['custom_options', b'custom_options', 'model_sample_rate_hertz', b'model_sample_rate_hertz', 'model_type', b'model_type', 'postprocessing_mode', b'postprocessing_mode', 'voice_style', b'voice_style']) -> None:
        ...
global___SynthesizeOptions = SynthesizeOptions

@typing_extensions.final
class SynthesizeSpeechRequest(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    TEXT_FIELD_NUMBER: builtins.int
    SSML_FIELD_NUMBER: builtins.int
    LANGUAGE_CODE_FIELD_NUMBER: builtins.int
    ENCODING_FIELD_NUMBER: builtins.int
    SAMPLE_RATE_HERTZ_FIELD_NUMBER: builtins.int
    VOICE_NAME_FIELD_NUMBER: builtins.int
    SYNTHESIZE_OPTIONS_FIELD_NUMBER: builtins.int
    text: builtins.str
    ssml: builtins.str
    language_code: builtins.str
    encoding: global___AudioEncoding.ValueType
    sample_rate_hertz: builtins.int
    voice_name: builtins.str

    @property
    def synthesize_options(self) -> global___SynthesizeOptions:
        ...

    def __init__(self, *, text: builtins.str=..., ssml: builtins.str=..., language_code: builtins.str=..., encoding: global___AudioEncoding.ValueType=..., sample_rate_hertz: builtins.int=..., voice_name: builtins.str=..., synthesize_options: global___SynthesizeOptions | None=...) -> None:
        ...

    def HasField(self, field_name: typing_extensions.Literal['input_source', b'input_source', 'ssml', b'ssml', 'synthesize_options', b'synthesize_options', 'text', b'text']) -> builtins.bool:
        ...

    def ClearField(self, field_name: typing_extensions.Literal['encoding', b'encoding', 'input_source', b'input_source', 'language_code', b'language_code', 'sample_rate_hertz', b'sample_rate_hertz', 'ssml', b'ssml', 'synthesize_options', b'synthesize_options', 'text', b'text', 'voice_name', b'voice_name']) -> None:
        ...

    def WhichOneof(self, oneof_group: typing_extensions.Literal['input_source', b'input_source']) -> typing_extensions.Literal['text', 'ssml'] | None:
        ...
global___SynthesizeSpeechRequest = SynthesizeSpeechRequest

@typing_extensions.final
class StreamingSynthesizeSpeechResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    AUDIO_FIELD_NUMBER: builtins.int
    audio: builtins.bytes

    def __init__(self, *, audio: builtins.bytes=...) -> None:
        ...

    def ClearField(self, field_name: typing_extensions.Literal['audio', b'audio']) -> None:
        ...
global___StreamingSynthesizeSpeechResponse = StreamingSynthesizeSpeechResponse

@typing_extensions.final
class SynthesizeSpeechResponse(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    AUDIO_FIELD_NUMBER: builtins.int
    audio: builtins.bytes

    def __init__(self, *, audio: builtins.bytes=...) -> None:
        ...

    def ClearField(self, field_name: typing_extensions.Literal['audio', b'audio']) -> None:
        ...
global___SynthesizeSpeechResponse = SynthesizeSpeechResponse

@typing_extensions.final
class ModelsInfo(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    MODELS_FIELD_NUMBER: builtins.int

    @property
    def models(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___ModelInfo]:
        ...

    def __init__(self, *, models: collections.abc.Iterable[global___ModelInfo] | None=...) -> None:
        ...

    def ClearField(self, field_name: typing_extensions.Literal['models', b'models']) -> None:
        ...
global___ModelsInfo = ModelsInfo

@typing_extensions.final
class ModelInfo(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor
    NAME_FIELD_NUMBER: builtins.int
    SAMPLE_RATE_HERTZ_FIELD_NUMBER: builtins.int
    LANGUAGE_CODE_FIELD_NUMBER: builtins.int
    TYPE_FIELD_NUMBER: builtins.int
    name: builtins.str
    sample_rate_hertz: builtins.int
    language_code: builtins.str
    type: builtins.str

    def __init__(self, *, name: builtins.str=..., sample_rate_hertz: builtins.int=..., language_code: builtins.str=..., type: builtins.str=...) -> None:
        ...

    def ClearField(self, field_name: typing_extensions.Literal['language_code', b'language_code', 'name', b'name', 'sample_rate_hertz', b'sample_rate_hertz', 'type', b'type']) -> None:
        ...
global___ModelInfo = ModelInfo